#!/usr/bin/env python
# coding: utf-8

# In[1]:


import numpy as np
import matplotlib.pyplot as plt


# In[69]:


mean = [0, 0]
covariance = [[10,0], [0,10]]
n_samples = 1000
data = np.random.multivariate_normal(mean, covariance, n_samples)


# In[70]:


plt.plot(data[:,0], data[:,1], '.', alpha=0.5)
plt.axis('equal')
plt.grid()
plt.show()


# In[71]:


# A linear transformation

A = np.random.normal(size=[2,2])


# In[72]:


z = np.dot(data, A)


# In[73]:


plt.plot(z[:,0], z[:,1], '.', alpha=0.5)
plt.axis('equal')
plt.grid()
plt.show()


# In[74]:


# A non-linear transformation
def sigmoid(x):
    return 1 / (1 + np.exp(-x))


# In[75]:


x = np.linspace(-10,10)
plt.plot(x, sigmoid(x))


# In[76]:


# Transform the final layer
y = sigmoid(z)


# In[77]:


plt.plot(y[:,0], y[:,1], '.', alpha=0.5)
plt.axis('equal')
plt.grid()
plt.show()


# In[ ]:





# In[ ]:




